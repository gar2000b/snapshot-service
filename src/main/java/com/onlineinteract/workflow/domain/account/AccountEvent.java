/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.onlineinteract.workflow.domain.account;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AccountEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6676954561565019725L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AccountEvent\",\"namespace\":\"com.onlineinteract.workflow.domain.account\",\"fields\":[{\"name\":\"eventId\",\"type\":\"string\"},{\"name\":\"created\",\"type\":\"long\"},{\"name\":\"eventType\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"long\"},{\"name\":\"v1\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AccountV1\",\"namespace\":\"com.onlineinteract.workflow.domain.account.v1\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"openingBalance\",\"type\":\"string\"},{\"name\":\"savingsRate\",\"type\":\"string\"}]}],\"default\":null},{\"name\":\"v2\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AccountV2\",\"namespace\":\"com.onlineinteract.workflow.domain.account.v2\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"openingBalance\",\"type\":\"string\"},{\"name\":\"savingsRate\",\"type\":\"string\"},{\"name\":\"enabled\",\"type\":\"boolean\"},{\"name\":\"addr1\",\"type\":\"string\"},{\"name\":\"addr2\",\"type\":\"string\"}]}],\"default\":null},{\"name\":\"v3\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AccountV3\",\"namespace\":\"com.onlineinteract.workflow.domain.account.v3\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"openingBalance\",\"type\":\"string\"},{\"name\":\"savingsRate\",\"type\":\"string\"},{\"name\":\"enabled\",\"type\":\"boolean\"},{\"name\":\"addr\",\"type\":\"string\"}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence eventId;
  @Deprecated public long created;
  @Deprecated public java.lang.CharSequence eventType;
  @Deprecated public long version;
  @Deprecated public com.onlineinteract.workflow.domain.account.v1.AccountV1 v1;
  @Deprecated public com.onlineinteract.workflow.domain.account.v2.AccountV2 v2;
  @Deprecated public com.onlineinteract.workflow.domain.account.v3.AccountV3 v3;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AccountEvent() {}

  /**
   * All-args constructor.
   * @param eventId The new value for eventId
   * @param created The new value for created
   * @param eventType The new value for eventType
   * @param version The new value for version
   * @param v1 The new value for v1
   * @param v2 The new value for v2
   * @param v3 The new value for v3
   */
  public AccountEvent(java.lang.CharSequence eventId, java.lang.Long created, java.lang.CharSequence eventType, java.lang.Long version, com.onlineinteract.workflow.domain.account.v1.AccountV1 v1, com.onlineinteract.workflow.domain.account.v2.AccountV2 v2, com.onlineinteract.workflow.domain.account.v3.AccountV3 v3) {
    this.eventId = eventId;
    this.created = created;
    this.eventType = eventType;
    this.version = version;
    this.v1 = v1;
    this.v2 = v2;
    this.v3 = v3;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventId;
    case 1: return created;
    case 2: return eventType;
    case 3: return version;
    case 4: return v1;
    case 5: return v2;
    case 6: return v3;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventId = (java.lang.CharSequence)value$; break;
    case 1: created = (java.lang.Long)value$; break;
    case 2: eventType = (java.lang.CharSequence)value$; break;
    case 3: version = (java.lang.Long)value$; break;
    case 4: v1 = (com.onlineinteract.workflow.domain.account.v1.AccountV1)value$; break;
    case 5: v2 = (com.onlineinteract.workflow.domain.account.v2.AccountV2)value$; break;
    case 6: v3 = (com.onlineinteract.workflow.domain.account.v3.AccountV3)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.CharSequence getEventId() {
    return eventId;
  }

  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.CharSequence value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'created' field.
   * @return The value of the 'created' field.
   */
  public java.lang.Long getCreated() {
    return created;
  }

  /**
   * Sets the value of the 'created' field.
   * @param value the value to set.
   */
  public void setCreated(java.lang.Long value) {
    this.created = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.Long getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Long value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'v1' field.
   * @return The value of the 'v1' field.
   */
  public com.onlineinteract.workflow.domain.account.v1.AccountV1 getV1() {
    return v1;
  }

  /**
   * Sets the value of the 'v1' field.
   * @param value the value to set.
   */
  public void setV1(com.onlineinteract.workflow.domain.account.v1.AccountV1 value) {
    this.v1 = value;
  }

  /**
   * Gets the value of the 'v2' field.
   * @return The value of the 'v2' field.
   */
  public com.onlineinteract.workflow.domain.account.v2.AccountV2 getV2() {
    return v2;
  }

  /**
   * Sets the value of the 'v2' field.
   * @param value the value to set.
   */
  public void setV2(com.onlineinteract.workflow.domain.account.v2.AccountV2 value) {
    this.v2 = value;
  }

  /**
   * Gets the value of the 'v3' field.
   * @return The value of the 'v3' field.
   */
  public com.onlineinteract.workflow.domain.account.v3.AccountV3 getV3() {
    return v3;
  }

  /**
   * Sets the value of the 'v3' field.
   * @param value the value to set.
   */
  public void setV3(com.onlineinteract.workflow.domain.account.v3.AccountV3 value) {
    this.v3 = value;
  }

  /**
   * Creates a new AccountEvent RecordBuilder.
   * @return A new AccountEvent RecordBuilder
   */
  public static com.onlineinteract.workflow.domain.account.AccountEvent.Builder newBuilder() {
    return new com.onlineinteract.workflow.domain.account.AccountEvent.Builder();
  }

  /**
   * Creates a new AccountEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AccountEvent RecordBuilder
   */
  public static com.onlineinteract.workflow.domain.account.AccountEvent.Builder newBuilder(com.onlineinteract.workflow.domain.account.AccountEvent.Builder other) {
    return new com.onlineinteract.workflow.domain.account.AccountEvent.Builder(other);
  }

  /**
   * Creates a new AccountEvent RecordBuilder by copying an existing AccountEvent instance.
   * @param other The existing instance to copy.
   * @return A new AccountEvent RecordBuilder
   */
  public static com.onlineinteract.workflow.domain.account.AccountEvent.Builder newBuilder(com.onlineinteract.workflow.domain.account.AccountEvent other) {
    return new com.onlineinteract.workflow.domain.account.AccountEvent.Builder(other);
  }

  /**
   * RecordBuilder for AccountEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AccountEvent>
    implements org.apache.avro.data.RecordBuilder<AccountEvent> {

    private java.lang.CharSequence eventId;
    private long created;
    private java.lang.CharSequence eventType;
    private long version;
    private com.onlineinteract.workflow.domain.account.v1.AccountV1 v1;
    private com.onlineinteract.workflow.domain.account.v1.AccountV1.Builder v1Builder;
    private com.onlineinteract.workflow.domain.account.v2.AccountV2 v2;
    private com.onlineinteract.workflow.domain.account.v2.AccountV2.Builder v2Builder;
    private com.onlineinteract.workflow.domain.account.v3.AccountV3 v3;
    private com.onlineinteract.workflow.domain.account.v3.AccountV3.Builder v3Builder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.onlineinteract.workflow.domain.account.AccountEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.created)) {
        this.created = data().deepCopy(fields()[1].schema(), other.created);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventType)) {
        this.eventType = data().deepCopy(fields()[2].schema(), other.eventType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.v1)) {
        this.v1 = data().deepCopy(fields()[4].schema(), other.v1);
        fieldSetFlags()[4] = true;
      }
      if (other.hasV1Builder()) {
        this.v1Builder = com.onlineinteract.workflow.domain.account.v1.AccountV1.newBuilder(other.getV1Builder());
      }
      if (isValidValue(fields()[5], other.v2)) {
        this.v2 = data().deepCopy(fields()[5].schema(), other.v2);
        fieldSetFlags()[5] = true;
      }
      if (other.hasV2Builder()) {
        this.v2Builder = com.onlineinteract.workflow.domain.account.v2.AccountV2.newBuilder(other.getV2Builder());
      }
      if (isValidValue(fields()[6], other.v3)) {
        this.v3 = data().deepCopy(fields()[6].schema(), other.v3);
        fieldSetFlags()[6] = true;
      }
      if (other.hasV3Builder()) {
        this.v3Builder = com.onlineinteract.workflow.domain.account.v3.AccountV3.newBuilder(other.getV3Builder());
      }
    }

    /**
     * Creates a Builder by copying an existing AccountEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.onlineinteract.workflow.domain.account.AccountEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.created)) {
        this.created = data().deepCopy(fields()[1].schema(), other.created);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventType)) {
        this.eventType = data().deepCopy(fields()[2].schema(), other.eventType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.v1)) {
        this.v1 = data().deepCopy(fields()[4].schema(), other.v1);
        fieldSetFlags()[4] = true;
      }
      this.v1Builder = null;
      if (isValidValue(fields()[5], other.v2)) {
        this.v2 = data().deepCopy(fields()[5].schema(), other.v2);
        fieldSetFlags()[5] = true;
      }
      this.v2Builder = null;
      if (isValidValue(fields()[6], other.v3)) {
        this.v3 = data().deepCopy(fields()[6].schema(), other.v3);
        fieldSetFlags()[6] = true;
      }
      this.v3Builder = null;
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventId() {
      return eventId;
    }

    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setEventId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.eventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'created' field.
      * @return The value.
      */
    public java.lang.Long getCreated() {
      return created;
    }

    /**
      * Sets the value of the 'created' field.
      * @param value The value of 'created'.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setCreated(long value) {
      validate(fields()[1], value);
      this.created = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'created' field has been set.
      * @return True if the 'created' field has been set, false otherwise.
      */
    public boolean hasCreated() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'created' field.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder clearCreated() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }

    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.eventType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.Long getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setVersion(long value) {
      validate(fields()[3], value);
      this.version = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder clearVersion() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'v1' field.
      * @return The value.
      */
    public com.onlineinteract.workflow.domain.account.v1.AccountV1 getV1() {
      return v1;
    }

    /**
      * Sets the value of the 'v1' field.
      * @param value The value of 'v1'.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setV1(com.onlineinteract.workflow.domain.account.v1.AccountV1 value) {
      validate(fields()[4], value);
      this.v1Builder = null;
      this.v1 = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'v1' field has been set.
      * @return True if the 'v1' field has been set, false otherwise.
      */
    public boolean hasV1() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'v1' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.onlineinteract.workflow.domain.account.v1.AccountV1.Builder getV1Builder() {
      if (v1Builder == null) {
        if (hasV1()) {
          setV1Builder(com.onlineinteract.workflow.domain.account.v1.AccountV1.newBuilder(v1));
        } else {
          setV1Builder(com.onlineinteract.workflow.domain.account.v1.AccountV1.newBuilder());
        }
      }
      return v1Builder;
    }

    /**
     * Sets the Builder instance for the 'v1' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setV1Builder(com.onlineinteract.workflow.domain.account.v1.AccountV1.Builder value) {
      clearV1();
      v1Builder = value;
      return this;
    }

    /**
     * Checks whether the 'v1' field has an active Builder instance
     * @return True if the 'v1' field has an active Builder instance
     */
    public boolean hasV1Builder() {
      return v1Builder != null;
    }

    /**
      * Clears the value of the 'v1' field.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder clearV1() {
      v1 = null;
      v1Builder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'v2' field.
      * @return The value.
      */
    public com.onlineinteract.workflow.domain.account.v2.AccountV2 getV2() {
      return v2;
    }

    /**
      * Sets the value of the 'v2' field.
      * @param value The value of 'v2'.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setV2(com.onlineinteract.workflow.domain.account.v2.AccountV2 value) {
      validate(fields()[5], value);
      this.v2Builder = null;
      this.v2 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'v2' field has been set.
      * @return True if the 'v2' field has been set, false otherwise.
      */
    public boolean hasV2() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'v2' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.onlineinteract.workflow.domain.account.v2.AccountV2.Builder getV2Builder() {
      if (v2Builder == null) {
        if (hasV2()) {
          setV2Builder(com.onlineinteract.workflow.domain.account.v2.AccountV2.newBuilder(v2));
        } else {
          setV2Builder(com.onlineinteract.workflow.domain.account.v2.AccountV2.newBuilder());
        }
      }
      return v2Builder;
    }

    /**
     * Sets the Builder instance for the 'v2' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setV2Builder(com.onlineinteract.workflow.domain.account.v2.AccountV2.Builder value) {
      clearV2();
      v2Builder = value;
      return this;
    }

    /**
     * Checks whether the 'v2' field has an active Builder instance
     * @return True if the 'v2' field has an active Builder instance
     */
    public boolean hasV2Builder() {
      return v2Builder != null;
    }

    /**
      * Clears the value of the 'v2' field.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder clearV2() {
      v2 = null;
      v2Builder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'v3' field.
      * @return The value.
      */
    public com.onlineinteract.workflow.domain.account.v3.AccountV3 getV3() {
      return v3;
    }

    /**
      * Sets the value of the 'v3' field.
      * @param value The value of 'v3'.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setV3(com.onlineinteract.workflow.domain.account.v3.AccountV3 value) {
      validate(fields()[6], value);
      this.v3Builder = null;
      this.v3 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'v3' field has been set.
      * @return True if the 'v3' field has been set, false otherwise.
      */
    public boolean hasV3() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'v3' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.onlineinteract.workflow.domain.account.v3.AccountV3.Builder getV3Builder() {
      if (v3Builder == null) {
        if (hasV3()) {
          setV3Builder(com.onlineinteract.workflow.domain.account.v3.AccountV3.newBuilder(v3));
        } else {
          setV3Builder(com.onlineinteract.workflow.domain.account.v3.AccountV3.newBuilder());
        }
      }
      return v3Builder;
    }

    /**
     * Sets the Builder instance for the 'v3' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder setV3Builder(com.onlineinteract.workflow.domain.account.v3.AccountV3.Builder value) {
      clearV3();
      v3Builder = value;
      return this;
    }

    /**
     * Checks whether the 'v3' field has an active Builder instance
     * @return True if the 'v3' field has an active Builder instance
     */
    public boolean hasV3Builder() {
      return v3Builder != null;
    }

    /**
      * Clears the value of the 'v3' field.
      * @return This builder.
      */
    public com.onlineinteract.workflow.domain.account.AccountEvent.Builder clearV3() {
      v3 = null;
      v3Builder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public AccountEvent build() {
      try {
        AccountEvent record = new AccountEvent();
        record.eventId = fieldSetFlags()[0] ? this.eventId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.created = fieldSetFlags()[1] ? this.created : (java.lang.Long) defaultValue(fields()[1]);
        record.eventType = fieldSetFlags()[2] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.version = fieldSetFlags()[3] ? this.version : (java.lang.Long) defaultValue(fields()[3]);
        if (v1Builder != null) {
          record.v1 = this.v1Builder.build();
        } else {
          record.v1 = fieldSetFlags()[4] ? this.v1 : (com.onlineinteract.workflow.domain.account.v1.AccountV1) defaultValue(fields()[4]);
        }
        if (v2Builder != null) {
          record.v2 = this.v2Builder.build();
        } else {
          record.v2 = fieldSetFlags()[5] ? this.v2 : (com.onlineinteract.workflow.domain.account.v2.AccountV2) defaultValue(fields()[5]);
        }
        if (v3Builder != null) {
          record.v3 = this.v3Builder.build();
        } else {
          record.v3 = fieldSetFlags()[6] ? this.v3 : (com.onlineinteract.workflow.domain.account.v3.AccountV3) defaultValue(fields()[6]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
